name: Env and Secrets

on:
  workflow_dispatch: {}

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: production

jobs:
  deploy-to-aws:
    runs-on: ubuntu-latest

    env:
      DEPLOYMENT_NAME: my-webapp-prod

    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: Show workflow and job env vars (step has no STEP_FLAG)
        run: |
          echo "ENVIRONMENT=${ENVIRONMENT}"
          echo "AWS_REGION=${AWS_REGION}"
          echo "DEPLOYMENT_NAME=${DEPLOYMENT_NAME}"
          echo "STEP_FLAG=${STEP_FLAG:-<not set in this step>}"

      - name: Access AWS credentials from secrets (masked in logs)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          # Values printed from secrets are automatically masked by GitHub Actions
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
          echo "Region=${AWS_REGION}, Deployment=${DEPLOYMENT_NAME}"

      - name: Define a step-level env var and use it
        env:
          STEP_FLAG: dry-run
        run: |
          echo "STEP_FLAG=${STEP_FLAG} (only set for this step)"
          echo "DEPLOYMENT_NAME=${DEPLOYMENT_NAME} (job-level)"
          echo "ENVIRONMENT=${ENVIRONMENT}, AWS_REGION=${AWS_REGION} (workflow-level)"

      - name: Prove step-level env doesn't leak to the next step
        run: |
          echo "STEP_FLAG now: ${STEP_FLAG:-<not set; step-level scope only>}"
          echo "DEPLOYMENT_NAME still: ${DEPLOYMENT_NAME}"
          echo "ENVIRONMENT/AWS_REGION still: ${ENVIRONMENT}/${AWS_REGION}"
